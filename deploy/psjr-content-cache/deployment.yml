apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: psjr-content-cache
    project: marketing
    buildNumber: '$BUILD_NUMBER'
  name: psjr-content-cache
  namespace: marketing
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: psjr-content-cache
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'false'
      labels:
        app: psjr-content-cache
        project: marketing
    spec:
      containers:
        - image: nginx:stable-alpine
          imagePullPolicy: Always
          name: psjr-content-cache
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          resources:
            limits:
              memory: 2Gi
              cpu: '1'
            requests:
              cpu: '50m'
              memory: 100Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /readyz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 1
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            name: config
            subPath: nginx.conf
      volumes:
      - configMap:
          defaultMode: 420
          name: psjr-content-cache
        name: config
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: $KUBERNETES_SECRET_NAME
      nodeSelector:
        kubernetes.io/role: other
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
